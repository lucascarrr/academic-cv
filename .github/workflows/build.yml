name: compile-pdf

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history needed for branch switching

      # Setup caching for tectonic (optional, if you're using LaTeX)
      - name: Setup caching for tectonic
        uses: actions/cache@v3
        with:
          path: ~/.cache/Tectonic
          key: tectonic-${{ runner.os }}

      # Setup caching for conda packages
      - name: Setup caching for conda packages
        uses: actions/cache@v3
        with:
          path: ~/conda_pkgs_dir
          key: conda-${{ runner.os }}-${{ hashFiles('environment.yml') }}

      # Setup Miniconda and dependencies
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: environment.yml
          activate-environment: cv
          miniforge-variant: Mambaforge
          use-mamba: true
          channel-priority: strict

      # List installed packages (debugging)
      - name: List installed packages
        run: mamba list

      # Compile the LaTeX document to PDF
      - name: Compile PDF
        run: |
          make
          mkdir -p output
          mv *.pdf output/

      # Deploy only the PDF to the `pdf` branch
      - name: Push PDF to `pdf` branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Switch to a new orphan branch (deletes all previous files in `pdf` branch)
          git checkout --orphan pdf
          git rm -rf .

          # Copy the generated PDF to the root
          mv output/*.pdf .

          # Commit and push the new PDF branch
          git add *.pdf
          git commit -m "Update compiled PDF"
          git push --force origin pdf
